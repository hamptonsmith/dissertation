% ---------------------------------------------------------------------------
\chapter*{Conclusion}\label{sec:conclusion}
% ---------------------------------------------------------------------------
In conclusion, this research proposes to address a constellation of open problems in the design of a verification system and the engineering of mathematics and specifications within such a system.  A system including an extensible, modular mathematical language, well integrated with a practical, component-based programming language with a focus on modular components would be a novel entry into the realm of available systems and would enable us to test our hypothesis that well-engineered components, with respect not only to their implementation, but their specification as well, are a key to mechanically verifiable software.  This hypothesis will be established in part by demonstrating that with the aid of such engineering, a minimalist automated theorem proving style is sufficient to dispatch proof obligations arising from routine software.

By evaluating our design and implementation as we go against a well-design library specifically created to reveal the facility with which different specification paradigms can be realized, as well as their contribution to easy-to-verify VCs, we believe we can create a body of data and observations that will benefit not only users of RESOLVE, but also a wide variety of existing verification systems, both intended for practical software and deep mathematical development.
